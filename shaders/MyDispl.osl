#include "stdosl.h"

// Calculate an average of all colors
float average(color colorValue)
{
    return ((colorValue[0] + colorValue[1] + colorValue[2]) / 3.0) * colorValue[3];
}

shader MyDispl (
        normal Normal = 0.0,
        point Uv = 0.0,
        float HeightFactor = 1.0,
        float WaterLevel = 0.5,
        float ShiftX = 0.0,
        float ShiftY = 0.0,
        output vector Displacement = 0.0
    ) 
{
    // Path to the height image
    string path = "./textures/height/height_map.png";
    // Add the shift
    float x = Uv[0] + ShiftX;
    float y = Uv[1] + ShiftY;
    
    // Reduce it back between 0 and 1
    while (x > 1.0) {
        x -= 1.0;
    }
    
    while (x < 0.0) {
        x += 1.0;
    }
    
    // Do the same for y
    while (y > 1.0) {
        y -= 1.0;
    }
    
    while (y < 0.0) {
        y += 1.0;
    }
    
    // Access the height map with the calculated coordinates
    color HeightImage = (color) texture(path, x, y);
    
    // Calculate the average from the rgba values
    float height = average(HeightImage);
    
    // Implement the water level
    if (height < WaterLevel) {
        height = WaterLevel;
    }
    
    // Finally displace
    Displacement = normalize(Normal) * height * HeightFactor;
}

